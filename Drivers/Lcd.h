/************************************************************
Copyright (C) 深圳英可瑞科技开发有限公司
文 件 名：Lcd.c
版    本：1.00
创建日期：2012-03-13
作    者：郭数理
功能描述：LCD驱动头文件

函数列表：

修改记录：
	作者      日期        版本     修改内容
	郭数理    2012-03-13  1.00     创建
**************************************************************/

#ifndef __LCD_H_
#define __LCD_H_

#include "Type.h"

#define ICON_CLOCK  0
#define ICON_SIGNAL	1
#define ICON_UP     2
#define ICON_DOWN   3

#define LCD_ROTATE_0   0  //不旋转
#define LCD_ROTATE_90  1  //逆时针旋转90度


/*************************************************************
函数名称: v_lcd_lcd_init		           				
函数功能: 初始化LCD控制器						
输入参数: 无        		   				
输出参数: 无
返回值  ：无														   				
**************************************************************/
void v_lcd_lcd_init(void);


/*************************************************************
函数名称: v_lcd_lcd_clear		           				
函数功能: LCD清屏函数，清零显示缓冲区，注意此函数操作的显示缓冲区，并没有刷屏，如需刷屏请调用lcd_flush					
输入参数: 无        		   				
输出参数: 无
返回值  ：无														   				
**************************************************************/
void v_lcd_lcd_clear(void);


/*************************************************************
函数名称: v_lcd_lcd_flush		           				
函数功能: LCD刷屏函数，把显示缓冲区的数据发送给LCD控制器						
输入参数: u8_rotate -- 旋转参数，LCD_ROTATE_0不旋转，LCD_ROTATE_90旋转90度       		   				
输出参数: 无
返回值  ：无														   				
**************************************************************/
void v_lcd_lcd_flush(U8_T u8_rotate);


/*************************************************************
函数名称: v_lcd_lcd_draw_hline		           				
函数功能: 画水平直线，注意此函数操作的显示缓冲区，并没有刷屏，如需刷屏请调用lcd_flush						
输入参数: u32_x, u32_y   -- 直线的起始坐标值
          u32_len        -- 直线的长度
          u32_line_width -- 直线的线宽       		   				
输出参数: 无
返回值  ：无          		   															   				
**************************************************************/
void v_lcd_lcd_draw_hline(U32_T u32_x, U32_T u32_y, U32_T u32_len, U32_T u32_line_width);


/*************************************************************
函数名称: v_lcd_lcd_draw_vline		           				
函数功能: 画竖直直线，注意此函数操作的显示缓冲区，并没有刷屏，如需刷屏请调用lcd_flush						
输入参数: u32_x, u32_y   -- 直线的起始坐标值
          u32_len        -- 直线的长度
          u32_line_width -- 直线的线宽       		   				
输出参数: 无
返回值  ：无          		   															   				
**************************************************************/
void v_lcd_lcd_draw_vline(U32_T u32_x, U32_T u32_y, U32_T u32_len, U32_T u32_line_width);


/*************************************************************
函数名称: v_lcd_lcd_draw_rectangle		           				
函数功能: 画矩形，注意此函数操作的显示缓冲区，并没有刷屏，如需刷屏请调用lcd_flush						
输入参数: u32_x, u32_y   -- 矩形左上角的坐标值
          u32_width      -- 矩形的宽度
          u32_height     -- 矩形的高度
          u32_line_width -- 线宽       		   				
输出参数: 无
返回值  ：无          		   															   				
**************************************************************/
void v_lcd_lcd_draw_rectangle(U32_T u32_x, U32_T u32_y, U32_T u32_width, U32_T u32_height, U32_T u32_line_width);

/*************************************************************
函数名称: v_lcd_lcd_draw_icon		           				
函数功能: 画图标，注意此函数操作的显示缓冲区，并没有刷屏，如需刷屏请调用lcd_flush						
输入参数: u32_x, u32_y  -- 图标左上角的坐标值
          u32_icon_type -- 图标类型，见文件开始的宏定义       		   				
输出参数: 无
返回值  ：无          		   															   				
**************************************************************/
void v_lcd_lcd_draw_icon(U32_T u32_x, U32_T u32_y, U32_T u32_icon_type);


/*************************************************************
函数名称: v_lcd_lcd_draw_string		           				
函数功能: 画字符串，注意此函数操作的显示缓冲区，并没有刷屏，如需刷屏请调用lcd_flush				
输入参数: u32_x, u32_y     -- 字符串的起始坐标值
          string           -- 指向要画的字符串
          u32_invert_index -- 反白显示索引(从0开始），表示从它指向的字符开始反白，后面invert_len个字符都将反白
          u32_invert_len   -- 见invert_index的解释，invert_len为0表示不反白，一个汉字的长度为2   		   				
输出参数: 无
返回值  ：无          		   															   				
**************************************************************/
void v_lcd_lcd_draw_string(U32_T u32_x, U32_T u32_y, const char *string, U32_T u32_invert_index, U32_T u32_invert_len);


/*************************************************************
函数名称: s_lcd_lcd_cut_string		           				
函数功能: LCD分割字符串函数						
输入参数: string        -- 指向要分割的字符串
          u32_max_width -- 分割的宽度      		   				
输出参数: 无
返回值  ：第二个字符串的指针，如果字符串长度不于u32_max_width，则返回空														   				
**************************************************************/
char *s_lcd_lcd_cut_string(char *string, U32_T u32_max_width);


#endif
