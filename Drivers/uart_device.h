/************************************************************
Copyright (C) 深圳英可瑞科技开发有限公司
文 件 名：uart.h
版    本：1.00
创建日期：2012-03-19
作    者：李楚楠
功能描述：串口驱动头文件

函数列表：

修改记录：
	作者      日期        版本     修改内容
	李楚楠    2012-03-19  1.00     创建
**************************************************************/
#ifndef __UART_H 
#define __UART_H

#include <lpc17xx.h>

#ifndef FALSE
#define FALSE   (0)
#endif

#ifndef TRUE
#define TRUE    (1)
#endif

#define UART_RX_Q_SIZE		256  	//接收缓冲区长度，长度应该大于最大数据包长度，否则可能由于应用程序不能及时读取而丢数据
#define UART_TX_Q_SIZE		256	    //发送缓冲区长度，长度应该大于最大数据包长度

#define UART_PORT0	0
#define UART_PORT1	1
#define UART_PORT2	2
#define UART_PORT3	3

#define UART_PORTNUM	3  //串口数量最大值

/**************************************************************************************************
** 函数名称:		Uart_init
** 功能描述:		串口初始化程序
** 输入参数:		portnum -- 设备端口号(COM[0]、COM[1]、COM[2])
**              	baudrate -- 波特率
**            		frame -- 帧格式(数据位[DATA_BITS_8、DATA_BITS_7、DATA_BITS_5]、
**                              	奇偶位[EON、EOE、EOO、EO0、EO1]、
**                             	 	停止位[STOP_BIT_1、STOP_BIT_2]、三者为或运算)
** 输出参数:		无
** 返回值:			无
**************************************************************************************************/
void Uart_init( uint8_t portnum, uint32_t baudrate , uint8_t frame);


/**************************************************************************************************
** 函数名称:		Close_uartirq
** 功能描述:		关闭串口中断
** 输入参数:		portnum -- 端口设备号(COM[0]、COM[1]、COM[2])
** 输出参数:		无
** 返回值:			无
**************************************************************************************************/
void Close_uartirq( uint8_t portnum);


/**************************************************************************************************
** 函数名称:		Open_uartirq
** 功能描述:		开启串口中断
** 输入参数:		portnum -- 端口设备号(COM[0]、COM[1]、COM[2])
** 输出参数:		无
** 返回值:			无
**************************************************************************************************/
void Open_uartirq( uint8_t portnum);


/**************************************************************************************************
** 函数名称:		Set_frame
** 功能描述:		设置线路控制寄存器值
** 输入参数:		portnum -- 端口设备号(COM[0]、COM[1]、COM[2]), frame -- 需写进的值
** 输出参数:		无
** 返回值:			无
**************************************************************************************************/
void Set_frame( uint8_t portnum, uint8_t frame);


/**************************************************************************************************
** 函数名称:		Get_frame
** 功能描述:		获取线路控制寄存器值
** 输入参数:		portnum -- 端口设备号(COM[0]、COM[1]、COM[2])
** 输出参数:		无
** 返回值:			LCR寄存器值
**************************************************************************************************/
uint8_t Get_frame( uint8_t portnum);


/**************************************************************************************************
** 函数名称:		Set_Baudrate
** 功能描述:		设置波特率
** 输入参数:		portnum -- 端口设备号(COM[0]、COM[1]、COM[2]),
** 					baudrate -- 波特率大小
** 输出参数:		无
** 返回值:			无
**************************************************************************************************/
//波特率支持可以使用小于等于57600或者等于115200。57601~115199之间的波特率有可能通信不上，这跟里面的波特率精度设置有关
void Set_baudrate( uint8_t portnum, uint32_t baudrate);


/**************************************************************************************************
** 函数名称:		Get_baudrate
** 功能描述:		获取波特率
** 输入参数:		portnum -- 端口设备号(COM[0]、COM[1]、COM[2])
** 输出参数:		无
** 返回值:			baudrate -- 波特率
**************************************************************************************************/
uint32_t Get_baudrate( uint8_t portnum);


/**************************************************************************************************
** 函数名称:		Uart_recv
** 功能描述:		UART接收数据
** 输入参数:		portnum -- 端口设备号(COM[0]、COM[1]、COM[2]),
**              	*buf -- 保存接收数据的指针, 
**              	maxlen -- 接收数据的最大长度
** 输出参数:		无
** 返回值:			i -- 接收到数据的数目, -1 -- 接收失败
**************************************************************************************************/
int16_t Uart_recv( uint8_t portnum,uint8_t *buf, uint16_t maxlen);


/**************************************************************************************************
** 函数名称:		Uart_get_rxbuff_num
** 功能描述:		取接收缓冲区已接收的数据长度
** 输入参数:		portnum -- 端口设备号(COM[0]、COM[1]、COM[2])
** 输出参数:		无
** 返回值:			接收缓冲区已接收的数据长度
**************************************************************************************************/
uint16_t Uart_get_rxbuff_num( uint8_t portnum);


/**************************************************************************************************
** 函数名称:		Uart_get_txbuff_num
** 功能描述:		取发送缓冲区空闲的数据长度
** 输入参数:		portnum -- 端口设备号(COM[0]、COM[1]、COM[2])
** 输出参数:		无
** 返回值:			发送缓冲区空闲的数据长度
**************************************************************************************************/
uint16_t Uart_get_txbuff_num( uint8_t portnum);


/**************************************************************************************************
** 函数名称:		Uart_send
** 功能描述:		UART发送数据
** 输入参数:		portnum -- 端口设备号(COM[0]、COM[1]、COM[2]),
**              	*buf -- 发送数据的指针, 
**              	length -- 发送数据的长度
** 输出参数:		无
** 返回值:			0 -- 成功, 1 -- 失败
**************************************************************************************************/
uint16_t Uart_send( uint8_t portnum, uint8_t *buf, uint16_t length );


#endif /* end __UART_H */
/*****************************************************************************
**                            End Of File
******************************************************************************/
